#include <stdio.h>

//一维数组传参
/*
 例如将一维数组int arr[10] = {0}；传参至函数，接受形式分为三种
 1
 void test(int arr[10])；
 将数组原样不动照抄
 2
 void test1(int arr[])；
 中括号内不需要元素，其他和1相同
 3
 void test2(int *arr) 
 当数组传参时传的是首元素地址，所以用指针接受也没有问题
 */
 
 //一维指针数组传参
 /*
 先定义一个类型为int*的数组
 int *arr[20] = {0}；
 将这个一级指针传向函数的。接受方法分为三种
 1
 void test(int *arr[20])； 
 原样照抄
 2
 与1类似，只是在中括号内不加数字
 3
 void test2(int **arr)；
 因为传过来的是一级指针，所以用二级指针正好也可以接受 
 */ 
 
 //二维数组传参
 /*
 先定义一个二维数组
 int arr[3][5] = {0}；
 传参的方法也和前面相似但有些地方也较为不同 
 1 原样照抄
 void test(int arr[3][5])
 2 省略行不省略列 
 void test(int arr[][5])
 3 错误的方法，省略了列
 void test(int arr[3][]) //err,只要缺少列就会报错 
 //因为对于一个二维数组，可以不知道有多少行，但是
 //一定要知道有多少列，这样才方便运算 
 4 二维数组也可以使用指针的形式传参，但是有着不同
 void test(int (*arr)[5])//这是一个数组指针表示 
 //arr是一个指针，指向数组，每个数组有5个元素，而
 //每个元素的类型为int型 
  
  
 */
 
  
  
  
